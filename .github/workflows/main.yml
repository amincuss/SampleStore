name: Build & Deploy .NET Project to IIS

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Copy repository to deploy directory
        shell: pwsh
        run: |
          $src = "${{ github.workspace }}"
          $dst = "C:\deploy\myapp"
          if (Test-Path $dst) { Remove-Item $dst -Recurse -Force }
          Copy-Item -Path "$src" -Destination $dst -Recurse -Force

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Detect project automatically
        shell: pwsh
        run: |
          cd "C:\deploy\myapp"
          $projects = Get-ChildItem -Recurse -Filter *.csproj
          if (-not $projects) { throw "‚ùå Ÿá€å⁄Ü ŸÅÿß€åŸÑ csproj Ÿæ€åÿØÿß ŸÜÿ¥ÿØ!" }

          $mainProject = $projects[0].FullName
          Write-Host "‚úÖ Project detected: $mainProject"
          Set-Content -Path "C:\deploy\myapp\selected_project.txt" -Value $mainProject

      - name: Restore packages
        shell: pwsh
        run: |
          $proj = Get-Content "C:\deploy\myapp\selected_project.txt"
          cd (Split-Path $proj)
          dotnet restore $proj
          if ($LASTEXITCODE -ne 0) { throw "Restore failed." }

      - name: Build project
        shell: pwsh
        run: |
          $proj = Get-Content "C:\deploy\myapp\selected_project.txt"
          cd (Split-Path $proj)
          dotnet build --configuration Release $proj
          if ($LASTEXITCODE -ne 0) { throw "Build failed." }

      - name: Publish project
        shell: pwsh
        run: |
          $proj = Get-Content "C:\deploy\myapp\selected_project.txt"
          cd (Split-Path $proj)
          $publishDir = "C:\deploy\myapp\publish"
          dotnet publish --configuration Release --output $publishDir $proj
          if ($LASTEXITCODE -ne 0) { throw "Publish failed." }

      - name: Deploy to IIS
        shell: pwsh
        run: |
          $publishPath = "C:\deploy\myapp\publish"
          $iisPath     = "C:\inetpub\wwwroot"
          $publishExists = Test-Path $publishPath
          $iisExists     = Test-Path $iisPath

          if ($publishExists -and $iisExists) {
              Write-Host "üìÇ Copying published files to IIS directory..."
              Copy-Item -Path "$publishPath\*" -Destination $iisPath -Recurse -Force
              Write-Host "‚úÖ Deployment completed."
          }
          else {
              throw "‚ùå Invalid path. Check publish or IIS directory."
          }

      - name: Restart IIS
        shell: pwsh
        run: iisreset
